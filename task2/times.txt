ver0:

$ gcc ver0.c && ./a.out
Time: 8.795843e+00 
Check: 1.278343e+13

$ gcc -O2 ver0.c && ./a.out
Time: 2.100054e+00 
Check: 1.278343e+13


ver1:
SIZE as #define, A matrix changed to a 1D array of SIZE * SIZE size

$ gcc ver1.c && ./a.out
Time: 6.758259e+00 
Check: 1.278343e+13

$ gcc -O2 ver1.c && ./a.out
Time: 1.836004e+00 
Check: 1.278343e+13


ver2:
indexing with a macro

$ gcc ver2.c && ./a.out
Time: 6.673932e+00 
Check: 1.278343e+13

$ gcc -O2 ver2.c && ./a.out
Time: 2.062876e+00 
Check: 1.278343e+13

ver3:
putting hot variables into registers and making ints unsigned

$ gcc ver3.c && ./a.out
Time: 4.086753e+00 
Check: 1.278343e+13

$ gcc -O2 ver3.c && ./a.out
Time: 1.959673e+00 
Check: 1.278343e+13

ver4:
put A[i][i] and A[j][i] into register variables

$ gcc ver4.c && ./a.out
Time: 3.494409e+00 
Check: 1.278343e+13

$ gcc -O2 ver4.c && ./a.out
Time: 1.890421e+00 
Check: 1.278343e+13

ver5:
unrolling the most nested loop by 8 times with max macro and BLKSIZE as #define

$ gcc ver5.c && ./a.out
Time: 2.150640e+00 
Check: 1.278343e+13

$ gcc -O2 ver5.c && ./a.out
Time: 1.537436e+00 
Check: 1.278343e+13

ver6:
SSE3 vectors

$ gcc ver6.c && ./a.out
Time: 2.089225e+00 
Check: 1.278343e+13

$ gcc -O2 ver6.c && ./a.out
Time: 1.277388e+00 
Check: 1.278343e+13

ver7:
AVX vectors

$ gcc -mavx ver7.c && ./a.out
Time: 1.949933e+00 
Check: 1.278343e+13

$ gcc -mavx -march=native ver7.c && ./a.out
Time: 1.843155e+00 
Check: 1.278343e+13

$ gcc -mavx -mfma ver7.c && ./a.out
Time: 1.743650e+00 
Check: 1.278343e+13

$ gcc -mavx -march=native -mfma ver7.c && ./a.out
Time: 1.842715e+00 
Check: 1.278343e+13

$ gcc -mavx -O2 ver7.c && ./a.out
Time: 1.763218e+00 
Check: 1.278343e+13

$ gcc -mavx -O2 -march=native ver7.c && ./a.out
call LUPDecompose
Time: 1.449270e+00 
Check: 1.278343e+13

$ gcc -mavx -O2 -mfma ver7.c && ./a.out
call LUPDecompose
Time: 1.293382e+00 
Check: 1.278343e+13

$ gcc -mavx -O2 -march=native -mfma ver7.c && ./a.out
call LUPDecompose
Time: 1.362646e+00 
Check: 1.278343e+13
